{"version":3,"sources":["webpack:///./node_modules/@angular/compiler/src sync","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = \"./node_modules/@angular/compiler/src sync recursive\";","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"<form #f=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(f)\\\" novalidate>\\n    <div class=\\\"mdc-layout-grid\\\">\\n        <div class=\\\"mdc-layout-grid__cell\\\"><img src=\\\"http://alamiyamarkets.com/images/2018/01/02/logo.png\\\"/></div>\\n    </div>\\n    <div class=\\\"mdc-layout-grid\\\">\\n    <h1 class=\\\"mdc-typography--headline1\\\">Deposit by Credit Card</h1>\\n    </div>\\n    <div *ngIf=showmessage class=\\\"mdc-layout-grid\\\">\\n      <h3  class=\\\"mdc-typography--headline3\\\">{{message}}</h3>\\n    </div>\\n\\n  <div *ngIf=showform class=\\\"mdc-layout-grid\\\">\\n    <div class=\\\"mdc-layout-grid__inner\\\">\\n\\n      <div class=\\\"mdc-layout-grid__cell example-container\\\">\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"First name\\\" [(ngModel)]=\\\"first_name\\\" name=\\\"first_name\\\" required>\\n        </mat-form-field>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Last name\\\" [(ngModel)]=\\\"last_name\\\" required name=\\\"last_name\\\">\\n        </mat-form-field>\\n        <mat-form-field>\\n          <textarea matInput placeholder=\\\"Address: Apt#, Street #, Street name\\\" [(ngModel)]=\\\"address\\\" required name=\\\"address\\\"></textarea>\\n        </mat-form-field>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"City\\\" [(ngModel)]=\\\"city\\\" name=\\\"city\\\" required>\\n        </mat-form-field>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"State\\\" [(ngModel)]=\\\"state\\\" name=\\\"state\\\" required>\\n        </mat-form-field>\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Zip\\\" [(ngModel)]=\\\"zip\\\" name=\\\"zip\\\" required>\\n        </mat-form-field>\\n        <mat-form-field>\\n          <mat-select [(ngModel)]=\\\"country\\\" required name=\\\"country\\\" placeholder=\\\"Select country\\\">\\n            <mat-option value=\\\"AF\\\">Afghanistan</mat-option>\\n            <mat-option value=\\\"AX\\\">Åland Islands</mat-option>\\n            <mat-option value=\\\"AL\\\">Albania</mat-option>\\n            <mat-option value=\\\"DZ\\\">Algeria</mat-option>\\n            <mat-option value=\\\"AS\\\">American Samoa</mat-option>\\n            <mat-option value=\\\"AD\\\">Andorra</mat-option>\\n            <mat-option value=\\\"AO\\\">Angola</mat-option>\\n            <mat-option value=\\\"AI\\\">Anguilla</mat-option>\\n            <mat-option value=\\\"AQ\\\">Antarctica</mat-option>\\n            <mat-option value=\\\"AG\\\">Antigua and Barbuda</mat-option>\\n            <mat-option value=\\\"AR\\\">Argentina</mat-option>\\n            <mat-option value=\\\"AM\\\">Armenia</mat-option>\\n            <mat-option value=\\\"AW\\\">Aruba</mat-option>\\n            <mat-option value=\\\"AU\\\">Australia</mat-option>\\n            <mat-option value=\\\"AT\\\">Austria</mat-option>\\n            <mat-option value=\\\"AZ\\\">Azerbaijan</mat-option>\\n            <mat-option value=\\\"BS\\\">Bahamas</mat-option>\\n            <mat-option value=\\\"BH\\\">Bahrain</mat-option>\\n            <mat-option value=\\\"BD\\\">Bangladesh</mat-option>\\n            <mat-option value=\\\"BB\\\">Barbados</mat-option>\\n            <mat-option value=\\\"BY\\\">Belarus</mat-option>\\n            <mat-option value=\\\"BE\\\">Belgium</mat-option>\\n            <mat-option value=\\\"BZ\\\">Belize</mat-option>\\n            <mat-option value=\\\"BJ\\\">Benin</mat-option>\\n            <mat-option value=\\\"BM\\\">Bermuda</mat-option>\\n            <mat-option value=\\\"BT\\\">Bhutan</mat-option>\\n            <mat-option value=\\\"BO\\\">Bolivia, Plurinational State of</mat-option>\\n            <mat-option value=\\\"BQ\\\">Bonaire, Sint Eustatius and Saba</mat-option>\\n            <mat-option value=\\\"BA\\\">Bosnia and Herzegovina</mat-option>\\n            <mat-option value=\\\"BW\\\">Botswana</mat-option>\\n            <mat-option value=\\\"BV\\\">Bouvet Island</mat-option>\\n            <mat-option value=\\\"BR\\\">Brazil</mat-option>\\n            <mat-option value=\\\"IO\\\">British Indian Ocean Territory</mat-option>\\n            <mat-option value=\\\"BN\\\">Brunei Darussalam</mat-option>\\n            <mat-option value=\\\"BG\\\">Bulgaria</mat-option>\\n            <mat-option value=\\\"BF\\\">Burkina Faso</mat-option>\\n            <mat-option value=\\\"BI\\\">Burundi</mat-option>\\n            <mat-option value=\\\"KH\\\">Cambodia</mat-option>\\n            <mat-option value=\\\"CM\\\">Cameroon</mat-option>\\n            <mat-option value=\\\"CA\\\">Canada</mat-option>\\n            <mat-option value=\\\"CV\\\">Cape Verde</mat-option>\\n            <mat-option value=\\\"KY\\\">Cayman Islands</mat-option>\\n            <mat-option value=\\\"CF\\\">Central African Republic</mat-option>\\n            <mat-option value=\\\"TD\\\">Chad</mat-option>\\n            <mat-option value=\\\"CL\\\">Chile</mat-option>\\n            <mat-option value=\\\"CN\\\">China</mat-option>\\n            <mat-option value=\\\"CX\\\">Christmas Island</mat-option>\\n            <mat-option value=\\\"CC\\\">Cocos (Keeling) Islands</mat-option>\\n            <mat-option value=\\\"CO\\\">Colombia</mat-option>\\n            <mat-option value=\\\"KM\\\">Comoros</mat-option>\\n            <mat-option value=\\\"CG\\\">Congo</mat-option>\\n            <mat-option value=\\\"CD\\\">Congo, the Democratic Republic of the</mat-option>\\n            <mat-option value=\\\"CK\\\">Cook Islands</mat-option>\\n            <mat-option value=\\\"CR\\\">Costa Rica</mat-option>\\n            <mat-option value=\\\"CI\\\">Côte d'Ivoire</mat-option>\\n            <mat-option value=\\\"HR\\\">Croatia</mat-option>\\n            <mat-option value=\\\"CU\\\">Cuba</mat-option>\\n            <mat-option value=\\\"CW\\\">Curaçao</mat-option>\\n            <mat-option value=\\\"CY\\\">Cyprus</mat-option>\\n            <mat-option value=\\\"CZ\\\">Czech Republic</mat-option>\\n            <mat-option value=\\\"DK\\\">Denmark</mat-option>\\n            <mat-option value=\\\"DJ\\\">Djibouti</mat-option>\\n            <mat-option value=\\\"DM\\\">Dominica</mat-option>\\n            <mat-option value=\\\"DO\\\">Dominican Republic</mat-option>\\n            <mat-option value=\\\"EC\\\">Ecuador</mat-option>\\n            <mat-option value=\\\"EG\\\">Egypt</mat-option>\\n            <mat-option value=\\\"SV\\\">El Salvador</mat-option>\\n            <mat-option value=\\\"GQ\\\">Equatorial Guinea</mat-option>\\n            <mat-option value=\\\"ER\\\">Eritrea</mat-option>\\n            <mat-option value=\\\"EE\\\">Estonia</mat-option>\\n            <mat-option value=\\\"ET\\\">Ethiopia</mat-option>\\n            <mat-option value=\\\"FK\\\">Falkland Islands (Malvinas)</mat-option>\\n            <mat-option value=\\\"FO\\\">Faroe Islands</mat-option>\\n            <mat-option value=\\\"FJ\\\">Fiji</mat-option>\\n            <mat-option value=\\\"FI\\\">Finland</mat-option>\\n            <mat-option value=\\\"FR\\\">France</mat-option>\\n            <mat-option value=\\\"GF\\\">French Guiana</mat-option>\\n            <mat-option value=\\\"PF\\\">French Polynesia</mat-option>\\n            <mat-option value=\\\"TF\\\">French Southern Territories</mat-option>\\n            <mat-option value=\\\"GA\\\">Gabon</mat-option>\\n            <mat-option value=\\\"GM\\\">Gambia</mat-option>\\n            <mat-option value=\\\"GE\\\">Georgia</mat-option>\\n            <mat-option value=\\\"DE\\\">Germany</mat-option>\\n            <mat-option value=\\\"GH\\\">Ghana</mat-option>\\n            <mat-option value=\\\"GI\\\">Gibraltar</mat-option>\\n            <mat-option value=\\\"GR\\\">Greece</mat-option>\\n            <mat-option value=\\\"GL\\\">Greenland</mat-option>\\n            <mat-option value=\\\"GD\\\">Grenada</mat-option>\\n            <mat-option value=\\\"GP\\\">Guadeloupe</mat-option>\\n            <mat-option value=\\\"GU\\\">Guam</mat-option>\\n            <mat-option value=\\\"GT\\\">Guatemala</mat-option>\\n            <mat-option value=\\\"GG\\\">Guernsey</mat-option>\\n            <mat-option value=\\\"GN\\\">Guinea</mat-option>\\n            <mat-option value=\\\"GW\\\">Guinea-Bissau</mat-option>\\n            <mat-option value=\\\"GY\\\">Guyana</mat-option>\\n            <mat-option value=\\\"HT\\\">Haiti</mat-option>\\n            <mat-option value=\\\"HM\\\">Heard Island and McDonald Islands</mat-option>\\n            <mat-option value=\\\"VA\\\">Holy See (Vatican City State)</mat-option>\\n            <mat-option value=\\\"HN\\\">Honduras</mat-option>\\n            <mat-option value=\\\"HK\\\">Hong Kong</mat-option>\\n            <mat-option value=\\\"HU\\\">Hungary</mat-option>\\n            <mat-option value=\\\"IS\\\">Iceland</mat-option>\\n            <mat-option value=\\\"IN\\\">India</mat-option>\\n            <mat-option value=\\\"ID\\\">Indonesia</mat-option>\\n            <mat-option value=\\\"IR\\\">Iran, Islamic Republic of</mat-option>\\n            <mat-option value=\\\"IQ\\\">Iraq</mat-option>\\n            <mat-option value=\\\"IE\\\">Ireland</mat-option>\\n            <mat-option value=\\\"IM\\\">Isle of Man</mat-option>\\n            <mat-option value=\\\"IL\\\">Israel</mat-option>\\n            <mat-option value=\\\"IT\\\">Italy</mat-option>\\n            <mat-option value=\\\"JM\\\">Jamaica</mat-option>\\n            <mat-option value=\\\"JP\\\">Japan</mat-option>\\n            <mat-option value=\\\"JE\\\">Jersey</mat-option>\\n            <mat-option value=\\\"JO\\\">Jordan</mat-option>\\n            <mat-option value=\\\"KZ\\\">Kazakhstan</mat-option>\\n            <mat-option value=\\\"KE\\\">Kenya</mat-option>\\n            <mat-option value=\\\"KI\\\">Kiribati</mat-option>\\n            <mat-option value=\\\"KP\\\">Korea, Democratic People's Republic of</mat-option>\\n            <mat-option value=\\\"KR\\\">Korea, Republic of</mat-option>\\n            <mat-option value=\\\"KW\\\">Kuwait</mat-option>\\n            <mat-option value=\\\"KG\\\">Kyrgyzstan</mat-option>\\n            <mat-option value=\\\"LA\\\">Lao People's Democratic Republic</mat-option>\\n            <mat-option value=\\\"LV\\\">Latvia</mat-option>\\n            <mat-option value=\\\"LB\\\">Lebanon</mat-option>\\n            <mat-option value=\\\"LS\\\">Lesotho</mat-option>\\n            <mat-option value=\\\"LR\\\">Liberia</mat-option>\\n            <mat-option value=\\\"LY\\\">Libya</mat-option>\\n            <mat-option value=\\\"LI\\\">Liechtenstein</mat-option>\\n            <mat-option value=\\\"LT\\\">Lithuania</mat-option>\\n            <mat-option value=\\\"LU\\\">Luxembourg</mat-option>\\n            <mat-option value=\\\"MO\\\">Macao</mat-option>\\n            <mat-option value=\\\"MK\\\">Macedonia, the former Yugoslav Republic of</mat-option>\\n            <mat-option value=\\\"MG\\\">Madagascar</mat-option>\\n            <mat-option value=\\\"MW\\\">Malawi</mat-option>\\n            <mat-option value=\\\"MY\\\">Malaysia</mat-option>\\n            <mat-option value=\\\"MV\\\">Maldives</mat-option>\\n            <mat-option value=\\\"ML\\\">Mali</mat-option>\\n            <mat-option value=\\\"MT\\\">Malta</mat-option>\\n            <mat-option value=\\\"MH\\\">Marshall Islands</mat-option>\\n            <mat-option value=\\\"MQ\\\">Martinique</mat-option>\\n            <mat-option value=\\\"MR\\\">Mauritania</mat-option>\\n            <mat-option value=\\\"MU\\\">Mauritius</mat-option>\\n            <mat-option value=\\\"YT\\\">Mayotte</mat-option>\\n            <mat-option value=\\\"MX\\\">Mexico</mat-option>\\n            <mat-option value=\\\"FM\\\">Micronesia, Federated States of</mat-option>\\n            <mat-option value=\\\"MD\\\">Moldova, Republic of</mat-option>\\n            <mat-option value=\\\"MC\\\">Monaco</mat-option>\\n            <mat-option value=\\\"MN\\\">Mongolia</mat-option>\\n            <mat-option value=\\\"ME\\\">Montenegro</mat-option>\\n            <mat-option value=\\\"MS\\\">Montserrat</mat-option>\\n            <mat-option value=\\\"MA\\\">Morocco</mat-option>\\n            <mat-option value=\\\"MZ\\\">Mozambique</mat-option>\\n            <mat-option value=\\\"MM\\\">Myanmar</mat-option>\\n            <mat-option value=\\\"NA\\\">Namibia</mat-option>\\n            <mat-option value=\\\"NR\\\">Nauru</mat-option>\\n            <mat-option value=\\\"NP\\\">Nepal</mat-option>\\n            <mat-option value=\\\"NL\\\">Netherlands</mat-option>\\n            <mat-option value=\\\"NC\\\">New Caledonia</mat-option>\\n            <mat-option value=\\\"NZ\\\">New Zealand</mat-option>\\n            <mat-option value=\\\"NI\\\">Nicaragua</mat-option>\\n            <mat-option value=\\\"NE\\\">Niger</mat-option>\\n            <mat-option value=\\\"NG\\\">Nigeria</mat-option>\\n            <mat-option value=\\\"NU\\\">Niue</mat-option>\\n            <mat-option value=\\\"NF\\\">Norfolk Island</mat-option>\\n            <mat-option value=\\\"MP\\\">Northern Mariana Islands</mat-option>\\n            <mat-option value=\\\"NO\\\">Norway</mat-option>\\n            <mat-option value=\\\"OM\\\">Oman</mat-option>\\n            <mat-option value=\\\"PK\\\">Pakistan</mat-option>\\n            <mat-option value=\\\"PW\\\">Palau</mat-option>\\n            <mat-option value=\\\"PS\\\">Palestinian Territory, Occupied</mat-option>\\n            <mat-option value=\\\"PA\\\">Panama</mat-option>\\n            <mat-option value=\\\"PG\\\">Papua New Guinea</mat-option>\\n            <mat-option value=\\\"PY\\\">Paraguay</mat-option>\\n            <mat-option value=\\\"PE\\\">Peru</mat-option>\\n            <mat-option value=\\\"PH\\\">Philippines</mat-option>\\n            <mat-option value=\\\"PN\\\">Pitcairn</mat-option>\\n            <mat-option value=\\\"PL\\\">Poland</mat-option>\\n            <mat-option value=\\\"PT\\\">Portugal</mat-option>\\n            <mat-option value=\\\"PR\\\">Puerto Rico</mat-option>\\n            <mat-option value=\\\"QA\\\">Qatar</mat-option>\\n            <mat-option value=\\\"RE\\\">Réunion</mat-option>\\n            <mat-option value=\\\"RO\\\">Romania</mat-option>\\n            <mat-option value=\\\"RU\\\">Russian Federation</mat-option>\\n            <mat-option value=\\\"RW\\\">Rwanda</mat-option>\\n            <mat-option value=\\\"BL\\\">Saint Barthélemy</mat-option>\\n            <mat-option value=\\\"SH\\\">Saint Helena, Ascension and Tristan da Cunha</mat-option>\\n            <mat-option value=\\\"KN\\\">Saint Kitts and Nevis</mat-option>\\n            <mat-option value=\\\"LC\\\">Saint Lucia</mat-option>\\n            <mat-option value=\\\"MF\\\">Saint Martin (French part)</mat-option>\\n            <mat-option value=\\\"PM\\\">Saint Pierre and Miquelon</mat-option>\\n            <mat-option value=\\\"VC\\\">Saint Vincent and the Grenadines</mat-option>\\n            <mat-option value=\\\"WS\\\">Samoa</mat-option>\\n            <mat-option value=\\\"SM\\\">San Marino</mat-option>\\n            <mat-option value=\\\"ST\\\">Sao Tome and Principe</mat-option>\\n            <mat-option value=\\\"SA\\\">Saudi Arabia</mat-option>\\n            <mat-option value=\\\"SN\\\">Senegal</mat-option>\\n            <mat-option value=\\\"RS\\\">Serbia</mat-option>\\n            <mat-option value=\\\"SC\\\">Seychelles</mat-option>\\n            <mat-option value=\\\"SL\\\">Sierra Leone</mat-option>\\n            <mat-option value=\\\"SG\\\">Singapore</mat-option>\\n            <mat-option value=\\\"SX\\\">Sint Maarten (Dutch part)</mat-option>\\n            <mat-option value=\\\"SK\\\">Slovakia</mat-option>\\n            <mat-option value=\\\"SI\\\">Slovenia</mat-option>\\n            <mat-option value=\\\"SB\\\">Solomon Islands</mat-option>\\n            <mat-option value=\\\"SO\\\">Somalia</mat-option>\\n            <mat-option value=\\\"ZA\\\">South Africa</mat-option>\\n            <mat-option value=\\\"GS\\\">South Georgia and the South Sandwich Islands</mat-option>\\n            <mat-option value=\\\"SS\\\">South Sudan</mat-option>\\n            <mat-option value=\\\"ES\\\">Spain</mat-option>\\n            <mat-option value=\\\"LK\\\">Sri Lanka</mat-option>\\n            <mat-option value=\\\"SD\\\">Sudan</mat-option>\\n            <mat-option value=\\\"SR\\\">Suriname</mat-option>\\n            <mat-option value=\\\"SJ\\\">Svalbard and Jan Mayen</mat-option>\\n            <mat-option value=\\\"SZ\\\">Swaziland</mat-option>\\n            <mat-option value=\\\"SE\\\">Sweden</mat-option>\\n            <mat-option value=\\\"CH\\\">Switzerland</mat-option>\\n            <mat-option value=\\\"SY\\\">Syrian Arab Republic</mat-option>\\n            <mat-option value=\\\"TW\\\">Taiwan, Province of China</mat-option>\\n            <mat-option value=\\\"TJ\\\">Tajikistan</mat-option>\\n            <mat-option value=\\\"TZ\\\">Tanzania, United Republic of</mat-option>\\n            <mat-option value=\\\"TH\\\">Thailand</mat-option>\\n            <mat-option value=\\\"TL\\\">Timor-Leste</mat-option>\\n            <mat-option value=\\\"TG\\\">Togo</mat-option>\\n            <mat-option value=\\\"TK\\\">Tokelau</mat-option>\\n            <mat-option value=\\\"TO\\\">Tonga</mat-option>\\n            <mat-option value=\\\"TT\\\">Trinidad and Tobago</mat-option>\\n            <mat-option value=\\\"TN\\\">Tunisia</mat-option>\\n            <mat-option value=\\\"TR\\\">Turkey</mat-option>\\n            <mat-option value=\\\"TM\\\">Turkmenistan</mat-option>\\n            <mat-option value=\\\"TC\\\">Turks and Caicos Islands</mat-option>\\n            <mat-option value=\\\"TV\\\">Tuvalu</mat-option>\\n            <mat-option value=\\\"UG\\\">Uganda</mat-option>\\n            <mat-option value=\\\"UA\\\">Ukraine</mat-option>\\n            <mat-option value=\\\"AE\\\">United Arab Emirates</mat-option>\\n            <mat-option value=\\\"GB\\\">United Kingdom</mat-option>\\n            <mat-option value=\\\"US\\\">United States</mat-option>\\n            <mat-option value=\\\"UM\\\">United States Minor Outlying Islands</mat-option>\\n            <mat-option value=\\\"UY\\\">Uruguay</mat-option>\\n            <mat-option value=\\\"UZ\\\">Uzbekistan</mat-option>\\n            <mat-option value=\\\"VU\\\">Vanuatu</mat-option>\\n            <mat-option value=\\\"VE\\\">Venezuela, Bolivarian Republic of</mat-option>\\n            <mat-option value=\\\"VN\\\">Viet Nam</mat-option>\\n            <mat-option value=\\\"VG\\\">Virgin Islands, British</mat-option>\\n            <mat-option value=\\\"VI\\\">Virgin Islands, U.S.</mat-option>\\n            <mat-option value=\\\"WF\\\">Wallis and Futuna</mat-option>\\n            <mat-option value=\\\"EH\\\">Western Sahara</mat-option>\\n            <mat-option value=\\\"YE\\\">Yemen</mat-option>\\n            <mat-option value=\\\"ZM\\\">Zambia</mat-option>\\n            <mat-option value=\\\"ZW\\\">Zimbabwe</mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <input matInput name=\\\"email\\\" placeholder=\\\"Email\\\" [(ngModel)]=\\\"email\\\" required>\\n          <!-- <mat-error *ngIf=\\\"emailFormControl.hasError('required')\\\">\\n                  Email is <strong>required</strong>\\n                </mat-error> -->\\n        </mat-form-field>\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <input matInput name=\\\"phone_no\\\" placeholder=\\\"Phone number\\\" [(ngModel)]=\\\"phone_no\\\" required>\\n          <!-- <mat-error *ngIf=\\\"emailFormControl.hasError('required')\\\">\\n                  Email is <strong>required</strong>\\n                </mat-error> -->\\n        </mat-form-field>\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <input matInput name=\\\"mt4_account_number\\\" placeholder=\\\"MT4 Account Number\\\" [(ngModel)]=\\\"mt4_account_number\\\" required>\\n          <!-- <mat-error *ngIf=\\\"emailFormControl.hasError('required')\\\">\\n                  Email is <strong>required</strong>\\n                </mat-error> -->\\n        </mat-form-field>\\n\\n      </div>\\n      <div class=\\\"mdc-layout-grid__cell example-container mdc-layout-grid__cell--span-1\\\"> </div>\\n      <div class=\\\"mdc-layout-grid__cell example-container \\\">\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Amount\\\" [(ngModel)]=\\\"amount\\\" name=\\\"amount\\\" class=\\\"example-right-align\\\" required>\\n\\n        </mat-form-field>\\n        <mat-form-field>\\n          <select matNativeControl placeholder=\\\"Currency\\\" required [(ngModel)]=\\\"currency\\\" name=\\\"currency\\\">\\n            <option value=\\\"USD\\\">USD</option>\\n            <option value=\\\"EUR\\\">Euro</option>\\n          </select>\\n        </mat-form-field>\\n        <mat-form-field>\\n          <input matInput name=\\\"card_no\\\" placeholder=\\\"Credit Card number\\\" id=\\\"card_no\\\" autocomplete=\\\"cc-number\\\"\\n            [(ngModel)]=\\\"card_no\\\" required ccNumber>\\n        </mat-form-field>\\n        <mat-form-field>\\n          <select matNativeControl placeholder=\\\"Expiry Month\\\" required [(ngModel)]=\\\"ccExpiryMonth\\\" name=\\\"ccExpiryMonth\\\">\\n            <option value=\\\"01\\\">January</option>\\n            <option value=\\\"02\\\">February</option>\\n            <option value=\\\"03\\\">March</option>\\n            <option value=\\\"04\\\">April</option>\\n            <option value=\\\"05\\\">May</option>\\n            <option value=\\\"06\\\">June</option>\\n            <option value=\\\"07\\\">July</option>\\n            <option value=\\\"08\\\">August</option>\\n            <option value=\\\"09\\\">September</option>\\n            <option value=\\\"10\\\">October</option>\\n            <option value=\\\"11\\\">November</option>\\n            <option value=\\\"12\\\">December</option>\\n          </select>\\n        </mat-form-field>\\n        <mat-form-field>\\n          <input matInput min=\\\"1\\\" max=\\\"4\\\" placeholder=\\\"Expiry Year\\\" [(ngModel)]=\\\"ccExpiryYear\\\" name=\\\"ccExpiryYear\\\" required>\\n        </mat-form-field>\\n        <mat-form-field>\\n          <input matInput minlength=\\\"3\\\" maxlength=\\\"3\\\" placeholder=\\\"CVV\\\" [(ngModel)]=\\\"cvvNumber\\\" name=\\\"cvvNumber\\\"\\n            required>\\n        </mat-form-field>\\n      </div>\\n    </div>\\n  </div>\\n  <div *ngIf=showform class=\\\"mdc-layout-grid\\\">\\n      <div class=\\\"mdc-layout-grid__cell\\\"><button mat-flat-button color=\\\"primary\\\">Submit</button>\\n        <mat-spinner *ngIf=showspinner></mat-spinner>\\n      </div>\\n  </div>\\n  <div class=\\\"mdc-layout-grid\\\">\\n    <div class=\\\"mdc-layout-grid__inner\\\">\\n      <div class=\\\"mdc-layout-grid__cell--span-3\\\">\\n        <img class=\\\"credit-card-logo\\\" src=\\\"http://2x8.af8.mwp.accessdomain.com/wp-content/uploads/2018/01/visa.png\\\">\\n      </div>\\n      <div class=\\\"mdc-layout-grid__cell--span-3\\\">\\n        <img class=\\\"credit-card-logo\\\"  src=\\\"http://2x8.af8.mwp.accessdomain.com/wp-content/uploads/2018/01/visaelectron.png\\\">\\n      </div>\\n      <div class=\\\"mdc-layout-grid__cell--span-3\\\">\\n        <img class=\\\"credit-card-logo\\\"  src=\\\"http://2x8.af8.mwp.accessdomain.com/wp-content/uploads/2018/01/mastercard.png\\\">\\n      </div>\\n      <div class=\\\"mdc-layout-grid__cell--span-3\\\">\\n        <img class=\\\"credit-card-logo\\\"  src=\\\"http://2x8.af8.mwp.accessdomain.com/wp-content/uploads/2018/01/maestro.png\\\">\\n      </div>\\n\\n    </div>\\n  </div>\\n</form>\\n\"","module.exports = \".example-container {\\n  display: flex;\\n  flex-direction: column; }\\n\\n.example-container > * {\\n  width: 100%; }\\n\\n.example-right-align {\\n  text-align: right; }\\n\\ninput.example-right-align::-webkit-outer-spin-button,\\ninput.example-right-align::-webkit-inner-spin-button {\\n  display: none; }\\n\\ninput.example-right-align {\\n  -moz-appearance: textfield; }\\n\\n.credit-card-logo {\\n  max-width: 30%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9qb2VqYW5oby9Eb2N1bWVudHMvYWxhbWFpeWEtZm9ybS9teS1hcHAvc3JjL2FwcC9hcHAuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFhO0VBQ2Isc0JBQXNCLEVBQUE7O0FBR3hCO0VBQ0UsV0FBVyxFQUFBOztBQUdiO0VBQ0UsaUJBQWlCLEVBQUE7O0FBR25COztFQUVFLGFBQWEsRUFBQTs7QUFHZjtFQUNFLDBCQUEwQixFQUFBOztBQUU1QjtFQUNFLGNBQWMsRUFBQSIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5leGFtcGxlLWNvbnRhaW5lciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG59XG5cbi5leGFtcGxlLWNvbnRhaW5lciA+ICoge1xuICB3aWR0aDogMTAwJTtcbn1cblxuLmV4YW1wbGUtcmlnaHQtYWxpZ24ge1xuICB0ZXh0LWFsaWduOiByaWdodDtcbn1cblxuaW5wdXQuZXhhbXBsZS1yaWdodC1hbGlnbjo6LXdlYmtpdC1vdXRlci1zcGluLWJ1dHRvbixcbmlucHV0LmV4YW1wbGUtcmlnaHQtYWxpZ246Oi13ZWJraXQtaW5uZXItc3Bpbi1idXR0b24ge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG5pbnB1dC5leGFtcGxlLXJpZ2h0LWFsaWduIHtcbiAgLW1vei1hcHBlYXJhbmNlOiB0ZXh0ZmllbGQ7XG59XG4uY3JlZGl0LWNhcmQtbG9nb3tcbiAgbWF4LXdpZHRoOiAzMCU7XG59XG4iXX0= */\"","import { environment } from './../environments/environment';\nimport { Component, OnInit, NgModule } from '@angular/core';\nimport {\n  FormControl,\n  FormGroupDirective,\n  NgForm,\n  Validators\n} from '@angular/forms';\nimport { ErrorStateMatcher } from '@angular/material/core';\nimport { CreditCardValidator } from 'angular-cc-library';\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\nimport DirectusSDK from '@directus/sdk-js';\nimport { AbstractLogger } from 'angular-logz-io';\nimport { stringify } from '@angular/compiler/src/util';\n\n/** @title Form field with label */\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(\n    control: FormControl | null,\n    form: FormGroupDirective | NgForm | null\n  ): boolean {\n    const isSubmitted = form && form.submitted;\n    return !!(\n      control &&\n      control.invalid &&\n      (control.dirty || control.touched || isSubmitted)\n    );\n  }\n}\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n\n  constructor(private http: HttpClient, private logz: AbstractLogger) { }\n  public showspinner = false;\n  public myAppKey = environment.key;\n  public fromemail = environment.email;\n  public sendgridkey = environment.sendgridkey;\n  public email: string;\n  public phone_no: string;\n  public first_name: string;\n  public last_name: string;\n  public address: string;\n  public country: string;\n  public ccExpiryMonth: string;\n  public ccExpiryYear: string;\n  public currency: string;\n  public cvvNumber: string;\n  public city: string;\n  public zip: string;\n  public selectedMonth: string;\n  public amount: string;\n  public card_no: string;\n  public mt4_account_number: string;\n  public paymentOrderId: string;\n  public formsuccess = false;\n  public showform = true;\n  public message: string;\n  public showmessage = false;\n  public state: string;\n\n  emailFormControl = new FormControl('', [\n    Validators.required,\n    Validators.email\n  ]);\n\n  ccNumberController = new FormControl('', [\n    Validators.required,\n    // CreditCardValidator.validateCCNumber\n  ]);\n  matcher = new MyErrorStateMatcher();\n  HttpClientModule: any;\n\n  public test() {\n    alert(this.myAppKey);\n    alert(this.email);\n  }\n\n  /*\n  checking the card type\n  1 - For Amex\n            2 - For Visa\n            3 - For Mastercard\n            4 - For Discover\n  */\n  public GetCardType(number: any) {\n            let re = new RegExp('^4[0-9]{12}(?:[0-9]{3})?$');\n            if (number.match(re) != null) {\n              return '2';\n            }\n            re = new RegExp('^3[47][0-9]{13}$');\n            if (number.match(re) != null) {\n              return '1';\n            }\n            re = new RegExp('^5[1-5][0-9]{14}$|^2(?:2(?:2[1-9]|[3-9][0-9])|[3-6][0-9][0-9]|7(?:[01][0-9]|20))[0-9]{12}$');\n            if (number.match(re) != null) {\n              return '3';\n            }\n            re = new RegExp('^65[4-9][0-9]{13}|64[4-9][0-9]{13}|6011[0-9]{12}|(622(?:12[6-9]|1[3-9][0-9]|[2-8][0-9][0-9]|9[01][0-9]|92[0-5])[0-9]{10})$');\n            if (number.match(re) != null) {\n              return '4';\n            }\n            return '';\n  }\n\n\n  public SendEmail(to: any, subject: any, message: any) {\n    const msg = {\n      'personalizations': [\n        {\n          'to': [\n            {\n              'email': to\n            }\n          ],\n          'subject': subject\n        }\n      ],\n      'from': {\n        'email': this.fromemail\n      },\n      'content': [\n        {\n          'type': 'text/html',\n          'value': message\n        }\n      ]\n    };\n    const ParseHeaders = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*',\n        'Access-Control-Allow-Headers': 'Origin, X-Requested-With, Content-Type, Accept',\n        'X-Requested-With': 'XMLHttpRequest',\n         'Authorization': `Bearer ${this.sendgridkey}`,\n        })\n    };\n    interface APIResponse {\n      message: string;\n    }\n        const URL = 'https://api.sendgrid.com/v3/mail/send';\n        this.showspinner = true;\n        this.http.post(URL, msg, ParseHeaders).subscribe((res: APIResponse ) => {\n          console.log(res);\n        });\n  }\n\n  onSubmit(f: NgForm) {\n    this.showmessage = false;\n    this.message = '';\n    const client = new DirectusSDK();\n/*\n    client.login({\n  url: \"https://demo-api.directus.app/\",\n  project: \"_\",\n  email: \"admin@example.com\",\n  password: \"password\"\n}).then(data => {\n  // Do something with the data\n  console.log(data);\n})\n.catch(error => console.error(error));\n*/\n    if (f.valid === true ) {\n    let postedData: any;\n    const ccType: any = this.GetCardType(f.value.card_no.replace(/\\s/g, ''));\n    if (ccType === '') {\n      alert('not a valid credit card number');\n      return false;\n    }\n    postedData = f.value;\n    postedData.api_key = this.myAppKey;\n    // postedData.currency = 'USD';\n   // postedData.state = 'test';\n    const test = {\n      'api_key': this.myAppKey,\n      'first_name': f.value.first_name,\n      'last_name': f.value.last_name,\n      'sulte_apt_no': 'Sulte Apt No.',\n      'address': f.value.address,\n      'country': f.value.country,\n      'state': f.value.state,\n      'city': f.value.city,\n      'zip': f.value.zip,\n      'email': f.value.email,\n      'phone_no': f.value.phone_no,\n      'amount': f.value.amount,\n      'currency': f.value.currency,\n      'card_no': f.value.card_no.replace(/\\s/g, ''),\n      'ccExpiryMonth': f.value.ccExpiryMonth,\n      'ccExpiryYear': f.value.ccExpiryYear,\n      'cvvNumber': f.value.cvvNumber,\n      'card_type': ccType,\n      'ip_address': '',\n      'birth_date': '',\n      'shipping_first_name': '',\n      'shipping_last_name': '',\n      'shipping_address': '',\n      'shipping_country': '',\n      'shipping_state': '',\n      'shipping_city': '',\n      'shipping_zip': '',\n      'shipping_email': '',\n      'shipping_phone_no': '',\n  };\n  // const my_details_in_json = JSON.stringify(test);\ninterface APIResponse {\n  message: string;\n  status: string;\n  order_id: string;\n}\n// https://cors.io/\nconst ParseHeaders = {\n  headers: new HttpHeaders({\n       'Access-Control-Allow-Origin': '*',\n       'Access-Control-Allow-Methods' : '*',\n       'Access-Control-Allow-Headers': 'Content-Type, Authorization',\n\n\n    })\n};\nconsole.log(ParseHeaders);\n    const URL = 'https://cors-anywhere.herokuapp.com/https://ipaytotal.solutions/api/transaction';\n    this.showspinner = true;\n    let adminEmailMessage = 'Name:' + test.first_name +  ' '  + test.last_name + '<br>' +\n      'phone:' + test.phone_no + '<br>' +\n      'email:' + test.email + '<br>' +\n      'address:' + test.address + '<br>' +\n      'country:' + test.country + '<br>' +\n      'state:' + test.state + '<br>' +\n      'city:' + test.city + '<br>' +\n      'zip:' + test.zip + '<br>' +\n      'Amount:' + test.currency + test.amount + '<br>' +\n      'mt4 account number:' + this.mt4_account_number + '<br>';\n      let clientEmilMessage = 'Thank you for your Deposit on AlamiyaMarkets' + '<br>' +\n      'Amount:' + test.currency + test.amount + '<br>' +\n      'mt4 account number:' + this.mt4_account_number + '<br>';\n      this.logz.info(stringify(adminEmailMessage));\n    this.http.post(URL, test, ParseHeaders)\n      .subscribe((res: APIResponse ) => {\n           console.log(res);\n      this.logz.info(adminEmailMessage);\n      this.logz.info(res.message);\n      this.showmessage = true;\n      this.message = res.message;\n      if (res.status === 'success') {\n        this.paymentOrderId = res.order_id;\n        adminEmailMessage = adminEmailMessage + 'Order ID:' + this.paymentOrderId;\n        clientEmilMessage = clientEmilMessage + 'Order ID:' + this.paymentOrderId;\n        // hide theform\n        // send email to admin and client\n        this.showform = false;\n        this.SendEmail('joejanho@gmail.com', 'New Succesful CC deposit from web'  , adminEmailMessage);\n        this.SendEmail('patrick.balian@gmail.com', 'New Succesful CC deposit from web'  , adminEmailMessage);\n        this.SendEmail(test.email, 'Alamiya MArkets  Succesful CC deposit'  , clientEmilMessage);\n      } else {\n        // keep the form\n        // show error message\n        window.scroll(0, 100);\n      }\n      this.showspinner = false;\n    } , error => this.logz.info('ERROR' + error.message), () => console.log('END'));\n  } else {\n      alert('Please check all required fields');\n    }\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {MatButtonModule, MatProgressSpinnerModule, MatCheckboxModule, MatInputModule, MatIconModule,\n  MatFormFieldModule, MatSelectModule, MatOptionModule, MatFormFieldControl, MatRadioModule, MatGridListModule\n} from '@angular/material';\nimport {FormControl, FormGroupDirective, NgForm, Validators} from '@angular/forms';\nimport {ErrorStateMatcher} from '@angular/material/core';\nimport { CreditCardDirectivesModule } from 'angular-cc-library';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AngularLogzIoModule, LogzioOptions, AbstractLogger, AngularLogzIoService } from 'angular-logz-io';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatButtonModule,\n    MatCheckboxModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatInputModule,\n    MatOptionModule,\n    MatRadioModule,\n    MatIconModule,\n    FormsModule,\n    ReactiveFormsModule,\n    CreditCardDirectivesModule,\n    HttpClientModule,\n    MatProgressSpinnerModule,\n    MatGridListModule,\n    AngularLogzIoModule\n  ],\n  providers: [\n    { provide: LogzioOptions, useValue: { token: 'ogGEicOPNKSyPWuRYzvzrfuvOWSpeqKL' }},\n    { provide: AbstractLogger, useClass: AngularLogzIoService},\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  key: 'cBbu7jRyJtGnSLKGsFDYRWfSVqklGcci3ebejswJpdBSdJQKZHcwbMCi0EHBng7M',\n  sendgridkey: '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',\n  email: 'joejanho@gmail.com'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}